[{"/Users/thethtetaung/projects/contact-tracing-system/src/reportWebVitals.js":"1","/Users/thethtetaung/projects/contact-tracing-system/src/App.js":"2","/Users/thethtetaung/projects/contact-tracing-system/src/index.js":"3","/Users/thethtetaung/projects/contact-tracing-system/src/redux/types.js":"4","/Users/thethtetaung/projects/contact-tracing-system/src/redux/store.js":"5","/Users/thethtetaung/projects/contact-tracing-system/src/redux/reducers.js":"6","/Users/thethtetaung/projects/contact-tracing-system/src/routes/index.js":"7","/Users/thethtetaung/projects/contact-tracing-system/src/pages/Home/index.js":"8","/Users/thethtetaung/projects/contact-tracing-system/src/pages/ContactHistory/index.js":"9","/Users/thethtetaung/projects/contact-tracing-system/src/pages/HeaderBar/index.js":"10","/Users/thethtetaung/projects/contact-tracing-system/src/pages/AdminLogin/index.js":"11","/Users/thethtetaung/projects/contact-tracing-system/src/redux/actions.js":"12","/Users/thethtetaung/projects/contact-tracing-system/src/pages/RegisterNewUser/index.js":"13","/Users/thethtetaung/projects/contact-tracing-system/src/pages/Users/index.js":"14"},{"size":362,"mtime":1610889029274,"results":"15","hashOfConfig":"16"},{"size":303,"mtime":1611597689680,"results":"17","hashOfConfig":"16"},{"size":392,"mtime":1611586135209,"results":"18","hashOfConfig":"16"},{"size":219,"mtime":1611757567534,"results":"19","hashOfConfig":"16"},{"size":131,"mtime":1611582962205,"results":"20","hashOfConfig":"16"},{"size":552,"mtime":1611756959986,"results":"21","hashOfConfig":"16"},{"size":695,"mtime":1611763666959,"results":"22","hashOfConfig":"16"},{"size":5219,"mtime":1611983686172,"results":"23","hashOfConfig":"16"},{"size":6802,"mtime":1611863909664,"results":"24","hashOfConfig":"16"},{"size":3229,"mtime":1611763664138,"results":"25","hashOfConfig":"16"},{"size":1792,"mtime":1611676058676,"results":"26","hashOfConfig":"16"},{"size":350,"mtime":1611756923406,"results":"27","hashOfConfig":"16"},{"size":4832,"mtime":1611864093357,"results":"28","hashOfConfig":"16"},{"size":8087,"mtime":1611983572082,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"18wkdmm",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/thethtetaung/projects/contact-tracing-system/src/reportWebVitals.js",[],["63","64"],"/Users/thethtetaung/projects/contact-tracing-system/src/App.js",[],["65","66"],"/Users/thethtetaung/projects/contact-tracing-system/src/index.js",[],["67","68"],"/Users/thethtetaung/projects/contact-tracing-system/src/redux/types.js",[],"/Users/thethtetaung/projects/contact-tracing-system/src/redux/store.js",[],"/Users/thethtetaung/projects/contact-tracing-system/src/redux/reducers.js",[],"/Users/thethtetaung/projects/contact-tracing-system/src/routes/index.js",[],"/Users/thethtetaung/projects/contact-tracing-system/src/pages/Home/index.js",[],"/Users/thethtetaung/projects/contact-tracing-system/src/pages/ContactHistory/index.js",["69"],"import React, { useEffect, useState } from 'react';\nimport {\n    Box,\n    makeStyles,\n    Typography,\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    TablePagination,\n    Button\n} from '@material-ui/core'\nimport RegisterNewUser from '../RegisterNewUser';\n\nconst History = () => {\n    const classes = useStyles();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [histories, setHistories] = useState([]);\n    const [openDialog, setOpenDialog] = useState(false);\n\n    const columns = [\n        { id: 'no', label: 'No', minWidth: 60 },\n        { id: 'name', label: 'Name', minWidth: 100 },\n        { id: 'nrc', label: 'NRC', minWidth: 100 },\n        { id: 'phone', label: 'Phone', minWidth: 100 },\n        { id: 'address', label: 'Address', minWidth: 100 },\n        { id: 'checked_in', label: 'Checked In', minWidth: 100 },\n        { id: 'checked_out', label: 'Checked Out', minWidth: 100 }\n    ];\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    useEffect(() => {\n        fetch('http://localhost:4000/api/user', {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n            .then(data => {\n                const users = data.data;\n                fetch('http://localhost:4000/api/history', {\n                    method: \"GET\"\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        const allHistories = [];\n                        data.data.forEach((historyData, index) => {\n                            const user = users.find(userData => userData.id === historyData.userID);\n                            allHistories.push(\n                                {\n                                    no: index + 1,\n                                    name: user.name,\n                                    nrc: user.nrc,\n                                    phone: user.phone,\n                                    address: user.address,\n                                    checked_in: new Date(historyData.checkedIn_at).toLocaleString(),\n                                    checked_out : new Date(historyData.checkedOut_at).toLocaleString()\n                                }\n                            )\n                        });\n                        setHistories(allHistories);\n                        return data;\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        return error;\n                    });\n                return data;\n            })\n            .catch(error => {\n                console.log(error);\n                return error;\n            });\n    }, []);\n\n    return (\n        <div className={classes.container}>\n            <Box className={classes.body}>\n                <Box className={classes.topBox}>\n                    <Typography variant='h5' color='primary'> Contact History </Typography>\n                </Box>\n                <Paper className={classes.tableRoot}>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    {columns.map((column) => (\n                                        <TableCell\n                                            key={column.id}\n                                            align={column.align}\n                                            style={{ minWidth: column.minWidth }}\n                                        >\n                                            {column.label}\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    histories?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                        return (\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                                {\n                                                    columns.map((column) => {\n                                                        const value = row[column.id];\n                                                        return (\n                                                            <TableCell key={column.id} align={column.align}>\n                                                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                                                            </TableCell>\n                                                        );\n                                                    })\n                                                }\n                                            </TableRow>\n                                        );\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 25, 100]}\n                        component=\"div\"\n                        count={histories.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </Paper>\n            </Box>\n            <RegisterNewUser openDialog={openDialog} closeDialog={() => setOpenDialog(false)} />\n        </div>\n    )\n}\n\nexport default History;\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 15\n    },\n    topBox: {\n        display: 'flex',\n        flexDirection: 'row',\n        flex: 1,\n        width: '100%',\n        justifyContent: 'space-between'\n    },\n    tableHead: {\n        background: 'primary',\n        backgroundColor: 'primary'\n    },\n    tableRoot: {\n        marginTop: 15,\n        width: '100%',\n    },\n    tableContainer: {\n        maxHeight: 590,\n    },\n});\n","/Users/thethtetaung/projects/contact-tracing-system/src/pages/HeaderBar/index.js",["70","71","72","73","74"],"import React, { useEffect, useState } from 'react'\nimport { AppBar, Button, IconButton, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useHistory } from 'react-router'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAdmin } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    rightComponent: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    textButton: {\n        color: 'white'\n    }\n}));\n\nconst HeaderBar = () => {\n    const history = useHistory();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [activePage, setActivePage] = useState('home');\n    const { isAdminLoggedIn } = useSelector(state => state);\n\n    const handleButtonClick = (route) => {\n        switch (route) {\n            case 'home': {\n                setActivePage('home');\n                history.push('/');\n                break;\n            };\n            case 'login': {\n                setActivePage('login');\n                history.push('/admin-login');\n                break;\n            }\n            case 'history': {\n                setActivePage('history');\n                history.push('/history');\n                break;\n            }\n            case 'user': {\n                setActivePage('user');\n                history.push('/users');\n                break;\n            }\n            case 'logout': {\n                setActivePage('home')\n                dispatch(logoutAdmin());\n                history.push('/');\n                break;\n            }\n        }\n    }\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant='dense'>\n                {/* <IconButton\n                    edge=\"start\"\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                >\n                    <MenuIcon />\n                </IconButton> */}\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    Contact Tracking System\n                </Typography>\n                <div className={classes.rightComponent}>\n                    <Button color={activePage === 'home' ? 'secondary' : 'inherit'} onClick={() => handleButtonClick('home')}>Home</Button>\n                    {isAdminLoggedIn && <Button color={activePage === 'history' ? 'secondary' : 'inherit'} onClick={() => handleButtonClick('history')}>History</Button>}\n                    {isAdminLoggedIn && <Button color={activePage === 'user' ? 'secondary' : 'inherit'} onClick={() => handleButtonClick('user')}>Users</Button>}\n                    {isAdminLoggedIn && <Button color='inherit' onClick={() => handleButtonClick('logout')}>Logout</Button>}\n                    {!isAdminLoggedIn && <Button color={activePage === 'login' ? 'secondary' : 'inherit'} onClick={() => handleButtonClick('login')}>Login</Button>}\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default HeaderBar;\n","/Users/thethtetaung/projects/contact-tracing-system/src/pages/AdminLogin/index.js",[],"/Users/thethtetaung/projects/contact-tracing-system/src/redux/actions.js",[],"/Users/thethtetaung/projects/contact-tracing-system/src/pages/RegisterNewUser/index.js",["75"],"/Users/thethtetaung/projects/contact-tracing-system/src/pages/Users/index.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"77","replacedBy":"83"},{"ruleId":"79","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":14,"column":5,"nodeType":"87","messageId":"88","endLine":14,"endColumn":11},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"90","line":2,"column":26,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"85","severity":1,"message":"91","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":36,"column":9,"nodeType":"94","messageId":"95","endLine":63,"endColumn":10},{"ruleId":"96","severity":1,"message":"97","line":37,"column":26,"nodeType":"98","messageId":"99","endLine":41,"endColumn":14},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"100","line":16,"column":5,"nodeType":"87","messageId":"88","endLine":16,"endColumn":16},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],["101"],["102"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'DialogTitle' is defined but never used.","no-global-assign","no-unsafe-negation"]